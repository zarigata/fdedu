
import { Language } from '../types';

type Prompts = {
    generateClassroom: string;
    analyzeSubmissions: string;
    generateTrainerLesson: string;
    analyzeClassroomChat: string;
    generateAdaptivePathways: string;
    analyzeGradebook: string;
    onDemandAssignmentHelper: string;
    generateProjectIdeas: string;
}

const prompts: Record<Language, Prompts> = {
    en: {
        generateClassroom: `Generate a set of assignments for a high school {subject} class focusing on the topic: "{topic}". The assignments should be engaging, test understanding, and be in English.`,
        analyzeSubmissions: `As an expert teaching assistant, analyze the following student submissions for the assignment titled "{assignmentTitle}".

Assignment Questions for context:
{questions}

Student Submissions (in JSON format):
{submissions}

Based on this data, provide a concise analysis in English covering these points:
1.  **Overall Performance Summary:** A brief overview of how the class performed.
2.  **Common Misconceptions:** Identify specific questions or topics where multiple students struggled and explain the likely misunderstanding.
3.  **Key Insights:** What are the main takeaways for the teacher? What concepts need reinforcement?
4.  **Actionable Recommendations:** Suggest 2-3 specific actions the teacher can take (e.g., "Review concept X," "Offer a small group session for students who missed Q2").

Format your response clearly with markdown headings.`,
        generateTrainerLesson: `Create a short, personal training session in English for a student on the topic: "{topic}". Include a title, a concise one-paragraph summary of the topic, and 3-5 questions to test their knowledge, each with a clear answer.`,
        analyzeClassroomChat: `
You are an expert AI teaching assistant co-pilot. Your purpose is to privately help a teacher manage their live online class by analyzing the student chat log in real-time. The teacher's language is English.
The topic of this class is: "{classroomTopic}".
The full student roster is: {studentRoster}.

Here is the recent chat history:
---
{chatHistory}
---

Based on the roster and the chat history, provide a concise, private briefing for the teacher in English with the following sections. Use markdown for formatting.

### üó£Ô∏è Points of Confusion
Identify specific questions, keywords, or sentiments from students that suggest misunderstanding or confusion about "{classroomTopic}". If multiple students mention the same thing, highlight it. If nothing is confusing, state that comprehension seems good.

###  Engagement Watch
Compare the list of students who have participated in the chat ({participatingStudents}) with the full roster. List any students who have not sent any messages.

### ‚ú® Actionable Suggestions
Based on your analysis, suggest 1-2 immediate, actionable things the teacher could do. For example:
- "Ask a quick poll: 'On a scale of 1-5, how well do you understand concept X?'"
- "Directly ask one of the quiet students, like [Student's Name], for their opinion on the topic."
- "Re-explain the difference between concept A and concept B."`,
        generateAdaptivePathways: `
You are an expert instructional designer. Your task is to create a differentiated, adaptive learning plan in English for a class based on their past performance.
The learning objective for this week is: "{topic}".

Here is the student performance data:
{studentData}

Analyze this data and perform the following actions:
1.  Group all students into three distinct categories: 'Accelerated' (for high-performers who need a challenge), 'Proficient' (for students who are on track), and 'Needs Reinforcement' (for students who are struggling).
2.  For each group, create one unique, tailored assignment that is appropriate for their level and addresses the learning objective ("{topic}").
    - The 'Accelerated' assignment should be a project-based or a deeper-thinking task.
    - The 'Proficient' assignment should be a standard homework task to solidify understanding.
    - The 'Needs Reinforcement' assignment should be foundational, perhaps with more direct questions or a guided structure.
3.  Each assignment must have a title, a brief description, and 3-5 questions.

Return your entire plan as a single JSON object.`,
        analyzeGradebook: `
You are an expert data analyst for an education platform. Your task is to analyze a classroom's gradebook and provide a detailed performance report for the teacher. The teacher's language is English.

Classroom: {classroomName}
Here is the full gradebook data. Each student has a list of their grades for various assignments. A grade of -1 indicates no submission.
{gradebookData}

Analyze this data and return a single JSON object with a detailed report.`,
        onDemandAssignmentHelper: `You are an AI study buddy. You are helping a student with a specific question from their homework. The student's question is: '{questionText}'. Your goal is to guide the student to the answer, not give it to them. Do NOT provide the direct answer. Ask leading questions, explain related concepts, or offer hints to help them solve it themselves. Respond in the user's language.`,
        generateProjectIdeas: `You are an expert curriculum designer. Your task is to generate 3-5 innovative group project ideas in English for a class on {subject}, specifically focusing on the topic of "{topic}". Each project idea should be suitable for high school students. For each idea, provide a catchy title, a one-paragraph description aimed at students, and 2-3 key guiding questions that the project should answer. Return the result as a single JSON object.`
    },
    pt: {
        generateClassroom: `Gere um conjunto de tarefas para uma turma de {subject} do ensino m√©dio com foco no t√≥pico: "{topic}". As tarefas devem ser envolventes, testar a compreens√£o e estar em Portugu√™s do Brasil.`,
        analyzeSubmissions: `Como um assistente de ensino especialista, analise os seguintes envios de alunos para a tarefa intitulada "{assignmentTitle}".

Quest√µes da Tarefa para contexto:
{questions}

Envios dos Alunos (em formato JSON):
{submissions}

Com base nesses dados, forne√ßa uma an√°lise concisa em Portugu√™s do Brasil cobrindo estes pontos:
1.  **Resumo do Desempenho Geral:** Uma breve vis√£o geral de como a turma se saiu.
2.  **Equ√≠vocos Comuns:** Identifique quest√µes ou t√≥picos espec√≠ficos onde v√°rios alunos tiveram dificuldade e explique o prov√°vel mal-entendido.
3.  **Principais Insights:** Quais s√£o as principales conclus√µes para o professor? Quais conceitos precisam de refor√ßo?
4.  **Recomenda√ß√µes Pr√°ticas:** Sugira 2-3 a√ß√µes espec√≠ficas que o professor pode tomar (por exemplo, "Revisar o conceito X," "Oferecer uma sess√£o em grupo para os alunos que erraram a Q2").

Formate sua resposta claramente com t√≠tulos em markdown.`,
        generateTrainerLesson: `Crie uma sess√£o de treinamento pessoal curta em Portugu√™s do Brasil para um aluno sobre o t√≥pico: "{topic}". Inclua um t√≠tulo, um resumo conciso de um par√°grafo sobre o t√≥pico e 3-5 perguntas para testar seus conocimientos, cada uma com uma resposta clara.`,
        analyzeClassroomChat: `
Voc√™ √© um copiloto assistente de ensino de IA especialista. Seu prop√≥sito √© ajudar privadamente um professor a gerenciar sua aula online ao vivo, analisando o registro de chat dos alunos em tempo real. O idioma do professor √© Portugu√™s do Brasil.
O t√≥pico desta aula √©: "{classroomTopic}".
A lista completa de alunos √©: {studentRoster}.

Aqui est√° o hist√≥rico de chat recente:
---
{chatHistory}
---

Com base na lista e no hist√≥rico do chat, forne√ßa um briefing conciso e privado para o professor em Portugu√™s do Brasil com as seguintes se√ß√µes. Use markdown para formata√ß√£o.

### üó£Ô∏è Pontos de Confus√£o
Identifique perguntas, palavras-chave ou sentimentos espec√≠ficos dos alunos que sugerem mal-entendido ou confus√£o sobre "{classroomTopic}". Se v√°rios alunos mencionarem a mesma coisa, destaque-a. Se nada for confuso, afirme que a compreens√£o parece boa.

###  Monitoramento do Engajamento
Compare a lista de alunos que participaram do chat ({participatingStudents}) com a lista completa. Liste os alunos que n√£o enviaram nenhuma mensagem.

### ‚ú® Sugest√µes Pr√°ticas
Com base em sua an√°lise, sugira 1-2 coisas imediatas e pr√°ticas que o professor poderia fazer. Por exemplo:
- "Fa√ßa uma enquete r√°pida: 'Numa escala de 1 a 5, qu√£o bem voc√™ entende o conceito X?'"
- "Pergunte diretamente a um dos alunos quietos, como [Nome do Aluno], sua opini√£o sobre o t√≥pico."
- "Reexplique a diferen√ßa entre o conceito A –∏ o conceito B."`,
        generateAdaptivePathways: `
Voc√™ √© um designer instrucional especialista. Sua tarefa √© criar um plano de aprendizado diferenciado e adaptativo em Portugu√™s do Brasil para uma turma com base no desempenho anterior.
O objetivo de aprendizagem para esta semana √©: "{topic}".

Aqui est√£o os dados de desempenho dos alunos:
{studentData}

Analise esses dados e execute as seguintes a√ß√µes:
1.  Agrupe todos os alunos em tr√™s categorias distintas: 'Acelerado' (para alunos de alto desempenho que precisam de um desafio), 'Proficiente' (para alunos que est√£o no caminho certo) e 'Precisa de Refor√ßo' (para alunos com dificuldades).
2.  Para cada grupo, crie uma tarefa √∫nica e personalizada que seja apropriada para o n√≠vel deles e aborde o objetivo de aprendizagem ("{topic}").
    - A tarefa 'Acelerado' deve ser um projeto ou uma tarefa de pensamento mais profundo.
    - A tarefa 'Proficiente' deve ser uma tarefa de casa padr√£o para solidificar a compreens√£o.
    - A tarefa 'Precisa de Refor√ßo' deve ser fundamental, talvez com perguntas mais diretas ou uma estrutura guiada.
3.  Cada tarefa deve ter um t√≠tulo, uma breve descri√ß√£o e 3-5 perguntas.

Retorne seu plano inteiro como um √∫nico objeto JSON.`,
        analyzeGradebook: `
Voc√™ √© um analista de dados especialista para uma plataforma de educa√ß√£o. Sua tarefa √© analisar o di√°rio de classe de uma turma e fornecer um relat√≥rio de desempenho detalhado para o professor. O idioma do professor √© Portugu√™s do Brasil.

Turma: {classroomName}
Aqui est√£o os dados completos do di√°rio de classe. Cada aluno tem uma lista de suas notas para v√°rias tarefas. Uma nota de -1 indica que n√£o houve envio.
{gradebookData}

Analise estes dados e retorne um √∫nico objeto JSON com um relat√≥rio detalhado.`,
        onDemandAssignmentHelper: `Voc√™ √© um amigo de estudos de IA. Voc√™ est√° ajudando um aluno com uma pergunta espec√≠fica do dever de casa. A pergunta do aluno √©: '{questionText}'. Seu objetivo √© guiar o aluno at√© a resposta, n√£o d√°-la de presente. N√ÉO forne√ßa a resposta direta. Fa√ßa perguntas orientadoras, explique conceitos relacionados ou ofere√ßa dicas para ajud√°-los a resolver por conta pr√≥pria. Responda no idioma do usu√°rio.`,
        generateProjectIdeas: `Voc√™ √© um designer de curr√≠culo especialista. Sua tarefa √© gerar de 3 a 5 ideias inovadoras de projetos em grupo em portugu√™s para uma aula sobre {subject}, focando especificamente no t√≥pico de "{topic}". Cada ideia de projeto deve ser adequada para alunos do ensino m√©dio. Para cada ideia, forne√ßa um t√≠tulo atraente, uma descri√ß√£o de um par√°grafo destinada aos alunos e 2-3 perguntas-chave orientadoras que o projeto deve responder. Retorne o resultado como um √∫nico objeto JSON.`
    },
    ja: {
        generateClassroom: `È´òÊ†°„ÅÆ{subject}„ÅÆ„ÇØ„É©„ÇπÂêë„Åë„Å´„ÄÅ„Éà„Éî„ÉÉ„ÇØ„Äå{topic}„Äç„Å´ÁÑ¶ÁÇπ„ÇíÂΩì„Å¶„ÅüË™≤È°å„Çª„ÉÉ„Éà„ÇíÁîüÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇË™≤È°å„ÅØÈ≠ÖÂäõÁöÑ„Åß„ÄÅÁêÜËß£Â∫¶„ÇíË©¶„Åô„ÇÇ„ÅÆ„Åß„ÅÇ„Çä„ÄÅÊó•Êú¨Ë™û„Åß„ÅÇ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ`,
        analyzeSubmissions: `Â∞ÇÈñÄ„ÅÆÊïôËÇ≤„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„Å®„Åó„Å¶„ÄÅË™≤È°åÂêç„Äå{assignmentTitle}„Äç„Å´ÂØæ„Åô„Çã‰ª•‰∏ã„ÅÆÁîüÂæí„ÅÆÊèêÂá∫Áâ©„ÇíÂàÜÊûê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

ÊñáËÑà„ÅÆ„Åü„ÇÅ„ÅÆË™≤È°å„ÅÆË≥™ÂïèÔºö
{questions}

ÁîüÂæí„ÅÆÊèêÂá∫Áâ©ÔºàJSONÂΩ¢ÂºèÔºâÔºö
{submissions}

„Åì„ÅÆ„Éá„Éº„Çø„Å´Âü∫„Å•„Åç„ÄÅ‰ª•‰∏ã„ÅÆÁÇπ„Å´„Å§„ÅÑ„Å¶Êó•Êú¨Ë™û„ÅßÁ∞°ÊΩî„Å™ÂàÜÊûê„ÇíÊèê‰æõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö
1.  **ÂÖ®‰ΩìÁöÑ„Å™„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÊ¶ÇË¶ÅÔºö** „ÇØ„É©„ÇπÂÖ®‰Ωì„ÅÆÊàêÁ∏æ„ÅÆÁ∞°Âçò„Å™Ê¶ÇË¶Å„ÄÇ
2.  **„Çà„Åè„ÅÇ„ÇãË™§Ëß£Ôºö** Ë§áÊï∞„ÅÆÁîüÂæí„ÅåËã¶Âä¥„Åó„ÅüÁâπÂÆö„ÅÆË≥™Âïè„ÇÑ„Éà„Éî„ÉÉ„ÇØ„ÇíÁâπÂÆö„Åó„ÄÅËÄÉ„Åà„Çâ„Çå„ÇãË™§Ëß£„ÇíË™¨Êòé„Åó„Åæ„Åô„ÄÇ
3.  **‰∏ªË¶Å„Å™Ê¥ûÂØüÔºö** ÊïôÂ∏´„Å´„Å®„Å£„Å¶„ÅÆ‰∏ª„Å™ÂèéÁ©´„ÅØ‰Ωï„Åß„Åô„ÅãÔºü„Å©„ÅÆÊ¶ÇÂøµ„ÇíË£úÂº∑„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÅãÔºü
4.  **ÂÆüË°åÂèØËÉΩ„Å™Êé®Â•®‰∫ãÈ†ÖÔºö** ÊïôÂ∏´„ÅåÂèñ„Çã„Åì„Å®„Åå„Åß„Åç„Çã2ÔΩû3„ÅÆÂÖ∑‰ΩìÁöÑ„Å™Ë°åÂãï„ÇíÊèêÊ°à„Åó„Åæ„ÅôÔºà‰æãÔºö„ÄåÊ¶ÇÂøµX„ÇíÂæ©Áøí„Åô„Çã„Äç„ÄÅ„ÄåQ2„ÇíÈñìÈÅï„Åà„ÅüÁîüÂæíÂêë„Åë„Å´Â∞è„Ç∞„É´„Éº„Éó„Çª„ÉÉ„Ç∑„Éß„É≥„ÇíÊèê‰æõ„Åô„Çã„ÄçÔºâ„ÄÇ

ÂøúÁ≠î„ÅØ„Éû„Éº„ÇØ„ÉÄ„Ç¶„É≥„ÅÆË¶ãÂá∫„Åó„ÅßÊòéÁ¢∫„Å´„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`,
        generateTrainerLesson: `„Éà„Éî„ÉÉ„ÇØ„Äå{topic}„Äç„Å´„Å§„ÅÑ„Å¶„ÄÅÂ≠¶ÁîüÂêë„Åë„ÅÆÁü≠„ÅÑ„Éë„Éº„ÇΩ„Éä„É´„Éà„É¨„Éº„Éã„É≥„Ç∞„Çª„ÉÉ„Ç∑„Éß„É≥„ÇíÊó•Êú¨Ë™û„Åß‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„Çø„Ç§„Éà„É´„ÄÅ„Éà„Éî„ÉÉ„ÇØ„ÅÆÁ∞°ÊΩî„Å™1ÊÆµËêΩ„ÅÆË¶ÅÁ¥Ñ„ÄÅ„Åù„Åó„Å¶Áü•Ë≠ò„Çí„ÉÜ„Çπ„Éà„Åô„Çã„Åü„ÇÅ„ÅÆ3ÔΩû5„Å§„ÅÆË≥™ÂïèÔºà„Åù„Çå„Åû„Çå„Å´ÊòéÁ¢∫„Å™Á≠î„Åà‰ªò„ÅçÔºâ„ÇíÂê´„ÇÅ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`,
        analyzeClassroomChat: `
„ÅÇ„Å™„Åü„ÅØÂ∞ÇÈñÄ„ÅÆAIÊïôËÇ≤„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„Ç≥„Éë„Ç§„É≠„ÉÉ„Éà„Åß„Åô„ÄÇ„ÅÇ„Å™„Åü„ÅÆÁõÆÁöÑ„ÅØ„ÄÅ„É™„Ç¢„É´„Çø„Ç§„É†„ÅßÁîüÂæí„ÅÆ„ÉÅ„É£„ÉÉ„Éà„É≠„Ç∞„ÇíÂàÜÊûê„Åô„Çã„Åì„Å®„Å´„Çà„Çä„ÄÅÊïôÂ∏´„Åå„É©„Ç§„Éñ„Ç™„É≥„É©„Ç§„É≥„ÇØ„É©„Çπ„ÇíÂÄã‰∫∫ÁöÑ„Å´ÁÆ°ÁêÜ„Åô„Çã„ÅÆ„ÇíÂä©„Åë„Çã„Åì„Å®„Åß„Åô„ÄÇÊïôÂ∏´„ÅÆË®ÄË™û„ÅØÊó•Êú¨Ë™û„Åß„Åô„ÄÇ
„Åì„ÅÆ„ÇØ„É©„Çπ„ÅÆ„Éà„Éî„ÉÉ„ÇØ„ÅØÔºö„Äå{classroomTopic}„Äç„ÄÇ
ÂÖ®ÁîüÂæíÂêçÁ∞ø„ÅØÔºö{studentRoster}„ÄÇ

ÊúÄËøë„ÅÆ„ÉÅ„É£„ÉÉ„ÉàÂ±•Ê≠¥„ÅØ„Åì„Å°„Çâ„Åß„ÅôÔºö
---
{chatHistory}
---

ÂêçÁ∞ø„Å®„ÉÅ„É£„ÉÉ„ÉàÂ±•Ê≠¥„Å´Âü∫„Å•„Åç„ÄÅÊïôÂ∏´Âêë„Åë„Å´‰ª•‰∏ã„ÅÆ„Çª„ÇØ„Ç∑„Éß„É≥„ÇíÂê´„ÇÄÁ∞°ÊΩî„Å™„Éó„É©„Ç§„Éô„Éº„Éà„Éñ„É™„Éº„Éï„Ç£„É≥„Ç∞„ÇíÊó•Êú¨Ë™û„ÅßÊèê‰æõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÊõ∏ÂºèË®≠ÂÆö„Å´„ÅØ„Éû„Éº„ÇØ„ÉÄ„Ç¶„É≥„Çí‰ΩøÁî®„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

### üó£Ô∏è Ê∑∑‰π±„ÅÆ„Éù„Ç§„É≥„Éà
„Äå{classroomTopic}„Äç„Å´„Å§„ÅÑ„Å¶„ÅÆË™§Ëß£„ÇÑÊ∑∑‰π±„ÇíÁ§∫ÂîÜ„Åô„ÇãÁîüÂæí„Åã„Çâ„ÅÆÁâπÂÆö„ÅÆË≥™Âïè„ÄÅ„Ç≠„Éº„ÉØ„Éº„Éâ„ÄÅ„Åæ„Åü„ÅØÊÑüÊÉÖ„ÇíÁâπÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇË§áÊï∞„ÅÆÁîüÂæí„ÅåÂêå„Åò„Åì„Å®„ÇíË®ÄÂèä„Åó„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ„ÄÅ„Åù„Çå„ÇíÂº∑Ë™ø„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ‰Ωï„ÇÇÊ∑∑‰π±„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅÁêÜËß£„ÅåËâØ„ÅÑ„Å®Ëø∞„Åπ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

###  „Ç®„É≥„Ç≤„Éº„Ç∏„É°„É≥„Éà„Ç¶„Ç©„ÉÉ„ÉÅ
„ÉÅ„É£„ÉÉ„Éà„Å´ÂèÇÂä†„Åó„ÅüÁîüÂæí„ÅÆ„É™„Çπ„ÉàÔºà{participatingStudents}Ôºâ„Å®ÂÖ®ÂêçÁ∞ø„ÇíÊØîËºÉ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÈÄÅ‰ø°„Åó„Å¶„ÅÑ„Å™„ÅÑÁîüÂæí„Çí„É™„Çπ„Éà„Ç¢„ÉÉ„Éó„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ

### ‚ú® ÂÆüË°åÂèØËÉΩ„Å™ÊèêÊ°à
„ÅÇ„Å™„Åü„ÅÆÂàÜÊûê„Å´Âü∫„Å•„Åç„ÄÅÊïôÂ∏´„Åå„Åô„Åê„Å´Ë°å„Åà„Çã1ÔΩû2„ÅÆÂÆüË°åÂèØËÉΩ„Å™„Åì„Å®„ÇíÊèêÊ°à„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ‰æã„Åà„Å∞Ôºö
- „ÄåÁ∞°Âçò„Å™ÊäïÁ•®„Çí„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö„ÄéÊ¶ÇÂøµX„Çí1ÔΩû5„ÅÆ„Çπ„Ç±„Éº„É´„Åß„Å©„Çå„Åè„Çâ„ÅÑÁêÜËß£„Åó„Å¶„ÅÑ„Åæ„Åô„ÅãÔºü„Äè„Äç
- „ÄåÈùô„Åã„Å™ÁîüÂæí„ÅÆ‰∏Ä‰∫∫„ÄÅ‰æã„Åà„Å∞[ÁîüÂæí„ÅÆÂêçÂâç]„Å´„ÄÅ„Éà„Éî„ÉÉ„ÇØ„Å´„Å§„ÅÑ„Å¶„ÅÆÊÑèË¶ã„ÇíÁõ¥Êé•Â∞ã„Å≠„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„Äç
- „ÄåÊ¶ÇÂøµA„Å®Ê¶ÇÂøµB„ÅÆÈÅï„ÅÑ„ÇíÂÜçË™¨Êòé„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„Äç`,
        generateAdaptivePathways: `
„ÅÇ„Å™„Åü„ÅØÂ∞ÇÈñÄ„ÅÆ„Ç§„É≥„Çπ„Éà„É©„ÇØ„Ç∑„Éß„Éä„É´„Éá„Ç∂„Ç§„Éä„Éº„Åß„Åô„ÄÇ„ÅÇ„Å™„Åü„ÅÆ‰ªï‰∫ã„ÅØ„ÄÅÈÅéÂéª„ÅÆÊàêÁ∏æ„Å´Âü∫„Å•„ÅÑ„Å¶„ÄÅ„ÇØ„É©„ÇπÂêë„Åë„ÅÆÂ∑ÆÂà•Âåñ„Åï„Çå„ÅüÈÅ©ÂøúÂ≠¶ÁøíË®àÁîª„ÇíÊó•Êú¨Ë™û„Åß‰ΩúÊàê„Åô„Çã„Åì„Å®„Åå„ÅÇ„Å™„Åü„ÅÆ‰ªï‰∫ã„Åß„Åô„ÄÇ
‰ªäÈÄ±„ÅÆÂ≠¶ÁøíÁõÆÊ®ô„ÅØÔºö„Äå{topic}„Äç„ÄÇ

ÁîüÂæí„ÅÆÊàêÁ∏æ„Éá„Éº„Çø„ÅØ„Åì„Å°„Çâ„Åß„ÅôÔºö
{studentData}

„Åì„ÅÆ„Éá„Éº„Çø„ÇíÂàÜÊûê„Åó„ÄÅ‰ª•‰∏ã„ÅÆÊìç‰Ωú„ÇíÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö
1.  ÂÖ®ÁîüÂæí„Çí„ÄåÂä†ÈÄü„ÄçÔºàÊåëÊà¶„ÅåÂøÖË¶Å„Å™È´òÊàêÁ∏æËÄÖÂêë„ÅëÔºâ„ÄÅ„ÄåÁøíÁÜü„ÄçÔºàÈ†ÜË™ø„Å™ÁîüÂæíÂêë„ÅëÔºâ„ÄÅ„ÄåË£úÂº∑„ÅåÂøÖË¶Å„ÄçÔºàËã¶Âä¥„Åó„Å¶„ÅÑ„ÇãÁîüÂæíÂêë„ÅëÔºâ„ÅÆ3„Å§„ÅÆÁï∞„Å™„Çã„Ç´„ÉÜ„Ç¥„É™„Å´„Ç∞„É´„Éº„ÉóÂàÜ„Åë„Åó„Åæ„Åô„ÄÇ
2.  ÂêÑ„Ç∞„É´„Éº„Éó„Å´ÂØæ„Åó„Å¶„ÄÅÂΩº„Çâ„ÅÆ„É¨„Éô„É´„Å´ÈÅ©„Åó„ÄÅÂ≠¶ÁøíÁõÆÊ®ôÔºà„Äå{topic}„ÄçÔºâ„Å´ÂØæÂøú„Åô„Çã„É¶„Éã„Éº„ÇØ„Åß„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åï„Çå„ÅüË™≤È°å„Çí1„Å§‰ΩúÊàê„Åó„Åæ„Åô„ÄÇ
    - „ÄåÂä†ÈÄü„Äç„ÅÆË™≤È°å„ÅØ„ÄÅ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Éô„Éº„Çπ„Åæ„Åü„ÅØ„Çà„ÇäÊ∑±„ÅÑÊÄùËÄÉ„ÇíË¶Å„Åô„Çã„Çø„Çπ„ÇØ„Åß„ÅÇ„Çã„Åπ„Åç„Åß„Åô„ÄÇ
    - „ÄåÁøíÁÜü„Äç„ÅÆË™≤È°å„ÅØ„ÄÅÁêÜËß£„ÇíÂõ∫„ÇÅ„Çã„Åü„ÇÅ„ÅÆÊ®ôÊ∫ñÁöÑ„Å™ÂÆøÈ°å„Çø„Çπ„ÇØ„Åß„ÅÇ„Çã„Åπ„Åç„Åß„Åô„ÄÇ
    - „ÄåË£úÂº∑„ÅåÂøÖË¶Å„Äç„ÅÆË™≤È°å„ÅØ„ÄÅ„Çà„ÇäÁõ¥Êé•ÁöÑ„Å™Ë≥™Âïè„ÇÑ„Ç¨„Ç§„Éâ‰ªò„Åç„ÅÆÊßãÈÄ†„ÇíÊåÅ„Å§Âü∫Á§éÁöÑ„Å™„ÇÇ„ÅÆ„Åß„ÅÇ„Çã„Åπ„Åç„Åß„Åô„ÄÇ
3.  ÂêÑË™≤È°å„Å´„ÅØ„ÄÅ„Çø„Ç§„Éà„É´„ÄÅÁ∞°Âçò„Å™Ë™¨Êòé„ÄÅ„Åä„Çà„Å≥3ÔΩû5„Å§„ÅÆË≥™Âïè„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ

Ë®àÁîªÂÖ®‰Ωì„ÇíÂçò‰∏Ä„ÅÆJSON„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Å®„Åó„Å¶Ëøî„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`,
        analyzeGradebook: `
„ÅÇ„Å™„Åü„ÅØÊïôËÇ≤„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†„ÅÆÂ∞ÇÈñÄ„Éá„Éº„Çø„Ç¢„Éä„É™„Çπ„Éà„Åß„Åô„ÄÇ„ÅÇ„Å™„Åü„ÅÆ‰ªï‰∫ã„ÅØ„ÄÅÊïôÂÆ§„ÅÆÊàêÁ∏æË°®„ÇíÂàÜÊûê„Åó„ÄÅÊïôÂ∏´Âêë„Åë„Å´Ë©≥Á¥∞„Å™ÊàêÁ∏æ„É¨„Éù„Éº„Éà„ÇíÊèê‰æõ„Åô„Çã„Åì„Å®„Åß„Åô„ÄÇÊïôÂ∏´„ÅÆË®ÄË™û„ÅØÊó•Êú¨Ë™û„Åß„Åô„ÄÇ

ÊïôÂÆ§Ôºö{classroomName}
„Åì„Çå„ÅåÂÆåÂÖ®„Å™ÊàêÁ∏æË°®„Éá„Éº„Çø„Åß„Åô„ÄÇÂêÑÁîüÂæí„Å´„ÅØ„ÄÅ„Åï„Åæ„Åñ„Åæ„Å™Ë™≤È°å„Å´ÂØæ„Åô„ÇãÊàêÁ∏æ„ÅÆ„É™„Çπ„Éà„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÊàêÁ∏æ„Åå-1„ÅÆÂ†¥Âêà„ÅØÊú™ÊèêÂá∫„ÇíÁ§∫„Åó„Åæ„Åô„ÄÇ
{gradebookData}

„Åì„ÅÆ„Éá„Éº„Çø„ÇíÂàÜÊûê„Åó„ÄÅË©≥Á¥∞„Å™„É¨„Éù„Éº„Éà„ÇíÂê´„ÇÄÂçò‰∏Ä„ÅÆJSON„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÇíËøî„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`,
        onDemandAssignmentHelper: `„ÅÇ„Å™„Åü„ÅØAIÂ≠¶Áøí„Éê„Éá„Ç£„Åß„Åô„ÄÇÂÆøÈ°å„ÅÆÁâπÂÆö„ÅÆÂïèÈ°å„Å´„Å§„ÅÑ„Å¶ÁîüÂæí„ÇíÊâã‰ºù„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇÁîüÂæí„ÅÆË≥™Âïè„ÅØ„Äå{questionText}„Äç„Åß„Åô„ÄÇ„ÅÇ„Å™„Åü„ÅÆÁõÆÊ®ô„ÅØ„ÄÅÁîüÂæí„ÅåËá™ÂàÜ„ÅßÁ≠î„Åà„ÇíË¶ã„Å§„Åë„Çâ„Çå„Çã„Çà„ÅÜ„Å´Â∞é„Åè„Åì„Å®„Åß„ÅÇ„Çä„ÄÅÁ≠î„Åà„ÇíÊïô„Åà„Çã„Åì„Å®„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇÁõ¥Êé•ÁöÑ„Å™Á≠î„Åà„ÅØÁµ∂ÂØæ„Å´Êèê‰æõ„Åó„Å™„ÅÑ„Åß„Åè„Å†„Åï„ÅÑ„ÄÇ‰ª£„Çè„Çä„Å´„ÄÅË™òÂ∞éÁöÑ„Å™Ë≥™Âïè„Çí„Åó„Åü„Çä„ÄÅÈñ¢ÈÄ£„Åô„ÇãÊ¶ÇÂøµ„ÇíË™¨Êòé„Åó„Åü„Çä„ÄÅ„Éí„É≥„Éà„ÇíÊèê‰æõ„Åó„Åü„Çä„Åó„Å¶„ÄÅÂΩº„Çâ„ÅåËá™Âäõ„ÅßËß£Ê±∫„Åß„Åç„Çã„Çà„ÅÜÊâãÂä©„Åë„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ„É¶„Éº„Ç∂„Éº„ÅÆË®ÄË™û„ÅßÂøúÁ≠î„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`,
        generateProjectIdeas: `„ÅÇ„Å™„Åü„ÅØÂ∞ÇÈñÄ„ÅÆ„Ç´„É™„Ç≠„É•„É©„É†„Éá„Ç∂„Ç§„Éä„Éº„Åß„Åô„ÄÇ„ÅÇ„Å™„Åü„ÅÆ‰ªï‰∫ã„ÅØ„ÄÅ{subject}„ÅÆ„ÇØ„É©„ÇπÂêë„Åë„Å´„ÄÅÁâπ„Å´„Äå{topic}„Äç„Å®„ÅÑ„ÅÜ„Éà„Éî„ÉÉ„ÇØ„Å´ÁÑ¶ÁÇπ„ÇíÂΩì„Å¶„Åü„ÄÅÈù©Êñ∞ÁöÑ„Å™„Ç∞„É´„Éº„Éó„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Ç¢„Ç§„Éá„Ç¢„ÇíÊó•Êú¨Ë™û„Åß3ÔΩû5ÂÄãÁîüÊàê„Åô„Çã„Åì„Å®„Åß„Åô„ÄÇÂêÑ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆ„Ç¢„Ç§„Éá„Ç¢„ÅØÈ´òÊ†°Áîü„Å´ÈÅ©„Åó„Å¶„ÅÑ„ÇãÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇÂêÑ„Ç¢„Ç§„Éá„Ç¢„Å´„Å§„ÅÑ„Å¶„ÄÅ„Ç≠„É£„ÉÉ„ÉÅ„Éº„Å™„Çø„Ç§„Éà„É´„ÄÅÁîüÂæíÂêë„Åë„ÅÆ1ÊÆµËêΩ„ÅÆË™¨Êòé„ÄÅ„Åù„Åó„Å¶„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅåÁ≠î„Åà„Çã„Åπ„Åç2ÔΩû3ÂÄã„ÅÆ‰∏ªË¶Å„Å™ÊåáÈáù„Å®„Å™„ÇãË≥™Âïè„ÇíÊèê‰æõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÁµêÊûú„ÅØÂçò‰∏Ä„ÅÆJSON„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Å®„Åó„Å¶Ëøî„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ`
    },
    es: {
        generateClassroom: `Genera un conjunto de tareas para una clase de {subject} de secundaria centrada en el tema: "{topic}". Las tareas deben ser atractivas, evaluar la comprensi√≥n y estar en espa√±ol.`,
        analyzeSubmissions: `Como un asistente de ense√±anza experto, analiza las siguientes entregas de estudiantes para la tarea titulada "{assignmentTitle}".

Preguntas de la Tarea para contexto:
{questions}

Entregas de los Estudiantes (en formato JSON):
{submissions}

Basado en estos datos, proporciona un an√°lisis conciso en espa√±ol que cubra estos puntos:
1.  **Resumen del Rendimiento General:** Una breve descripci√≥n de c√≥mo le fue a la clase.
2.  **Conceptos Err√≥neos Comunes:** Identifica preguntas o temas espec√≠ficos en los que varios estudiantes tuvieron dificultades y explica el malentendido probable.
3.  **Perspectivas Clave:** ¬øCu√°les son las principales conclusiones para el profesor? ¬øQu√© conceptos necesitan ser reforzados?
4.  **Recomendaciones Accionables:** Sugiere 2-3 acciones espec√≠ficas que el profesor puede tomar (por ejemplo, "Revisar el concepto X", "Ofrecer una sesi√≥n en grupo para los estudiantes que fallaron la P2").

Formatea tu respuesta claramente con encabezados de markdown.`,
        generateTrainerLesson: `Crea una breve sesi√≥n de entrenamiento personal en espa√±ol para un estudiante sobre el tema: "{topic}". Incluye un t√≠tulo, un resumen conciso de un p√°rrafo sobre el tema y de 3 a 5 preguntas para evaluar su conocimiento, cada una con una respuesta clara.`,
        analyzeClassroomChat: `
Eres un copiloto experto de IA para asistencia docente. Tu prop√≥sito es ayudar de forma privada a un profesor a gestionar su clase en l√≠nea en vivo analizando el registro de chat de los estudiantes en tiempo real. El idioma del profesor es el espa√±ol.
El tema de esta clase es: "{classroomTopic}".
La lista completa de estudiantes es: {studentRoster}.

Aqu√≠ est√° el historial de chat reciente:
---
{chatHistory}
---

Basado en la lista de estudiantes y el historial del chat, proporciona un informe conciso y privado para el profesor en espa√±ol con las siguientes secciones. Usa markdown para el formato.

### üó£Ô∏è Puntos de Confusi√≥n
Identifica preguntas, palabras clave o sentimientos espec√≠ficos de los estudiantes que sugieran malentendidos o confusi√≥n sobre "{classroomTopic}". Si varios estudiantes mencionan lo mismo, dest√°calo. Si nada es confuso, indica que la comprensi√≥n parece ser buena.

###  Vigilancia de la Participaci√≥n
Compara la lista de estudiantes que han participado en el chat ({participatingStudents}) con la lista completa. Enumera a los estudiantes que no han enviado ning√∫n mensaje.

### ‚ú® Sugerencias Accionables
Basado en tu an√°lisis, sugiere 1-2 acciones inmediatas y pr√°cticas que el profesor podr√≠a tomar. Por ejemplo:
- "Haz una encuesta r√°pida: 'En una escala del 1 al 5, ¬øqu√© tan bien entiendes el concepto X?'"
- "Preg√∫ntale directamente a uno de los estudiantes callados, como [Nombre del Estudiante], su opini√≥n sobre el tema."
- "Vuelve a explicar la diferencia entre el concepto A y el concepto B."`,
        generateAdaptivePathways: `
Eres un dise√±ador instruccional experto. Tu tarea es crear un plan de aprendizaje diferenciado y adaptativo en espa√±ol para una clase basado en su rendimiento pasado.
El objetivo de aprendizaje para esta semana es: "{topic}".

Aqu√≠ est√°n los datos de rendimiento de los estudiantes:
{studentData}

Analiza estos datos y realiza las siguientes acciones:
1.  Agrupa a todos los estudiantes en tres categor√≠as distintas: 'Acelerado' (para estudiantes de alto rendimiento que necesitan un desaf√≠o), 'Competente' (para estudiantes que van por buen camino) y 'Necesita Refuerzo' (para estudiantes que tienen dificultades).
2.  Para cada grupo, crea una tarea √∫nica y adaptada que sea apropiada para su nivel y que aborde el objetivo de aprendizaje ("{topic}").
    - La tarea 'Acelerado' debe ser un proyecto o una tarea de pensamiento m√°s profundo.
    - La tarea 'Competente' debe ser una tarea est√°ndar para consolidar la comprensi√≥n.
    - La tarea 'Necesita Refuerzo' debe ser fundamental, quiz√°s con preguntas m√°s directas o una estructura guiada.
3.  Cada tarea debe tener un t√≠tulo, una breve descripci√≥n y de 3 a 5 preguntas.

Devuelve tu plan completo como un √∫nico objeto JSON.`,
        analyzeGradebook: `
Eres un analista de datos experto para una plataforma educativa. Tu tarea es analizar el libro de calificaciones de un aula y proporcionar un informe de rendimiento detallado para el profesor. El idioma del profesor es el espa√±ol.

Aula: {classroomName}
Aqu√≠ est√°n los datos completos del libro de calificaciones. Cada estudiante tiene una lista de sus calificaciones para varias tareas. Una calificaci√≥n de -1 indica que no se entreg√≥.
{gradebookData}

Analiza estos datos y devuelve un √∫nico objeto JSON con un informe detallado.`,
        onDemandAssignmentHelper: `Eres un compa√±ero de estudio de IA. Est√°s ayudando a un estudiante con una pregunta espec√≠fica de su tarea. La pregunta del estudiante es: '{questionText}'. Tu objetivo es guiar al estudiante hacia la respuesta, no d√°rsela. NO proporciones la respuesta directa. Haz preguntas orientadoras, explica conceptos relacionados u ofrece pistas para ayudarles a resolverlo por s√≠ mismos. Responde en el idioma del usuario.`,
        generateProjectIdeas: `Eres un dise√±ador de curr√≠culo experto. Tu tarea es generar de 3 a 5 ideas innovadoras de proyectos en grupo en espa√±ol para una clase de {subject}, centr√°ndose espec√≠ficamente en el tema de "{topic}". Cada idea de proyecto debe ser adecuada para estudiantes de secundaria. Para cada idea, proporciona un t√≠tulo atractivo, una descripci√≥n de un p√°rrafo dirigida a los estudiantes y de 2 a 3 preguntas gu√≠a clave que el proyecto debe responder. Devuelve el resultado como un √∫nico objeto JSON.`
    }
};

export const getPrompts = (lang: Language): Prompts => {
    return prompts[lang] || prompts.en;
};